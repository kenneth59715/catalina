head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2004.10.11.21.08.11;	author kenneth;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.25.19.22.55;	author kenneth;	state Exp;
branches;
next	;


desc
@script allowing user to bind reservation to job
@


1.2
log
@close events db
@
text
@#!___PYTHON_PATH_PLACEHOLDER___
# script for a user to bind a reservation to a list of jobs

import sys
import Catalina
import time
import string
import re
import os
import pwd
import signal

signal.signal(signal.SIGTSTP,signal.SIG_IGN)
events_db_handle = Catalina.open_db(Catalina.EVENTS_DB,'write')
reservations_db_handle = Catalina.open_db(Catalina.RESERVATIONS_DB,'write')

res_id_string = sys.argv[1]

res_id_reo = re.compile(r"\d+")

if res_id_reo.match(res_id_string) == None :
    print "Bad res_id format"
    sys.exit(1)

res_id_int = string.atoi(res_id_string)

username_string = pwd.getpwuid(os.getuid())[0]

# Check for username in res_id
old_res = Catalina.get_object(res_id_string, reservations_db_handle)
if not old_res['creator_string'] == username_string :
    print "user reservation (%s) has other creator (%s)!" % \
     (old_res['name'], old_res['creator_string'])
    print "Reservation has not been bound!"
    Catalina.close_db(reservations_db_handle)
    Catalina.close_db(events_db_handle)
    sys.exit(1)

# If reached here, bind reservation

job_list = string.split(sys.argv[2], ',')

for job in job_list :
    Catalina.bind_reservation_to_job(res_id_string, job, events_db_handle, reservations_db_handle)

Catalina.close_db(reservations_db_handle)
Catalina.close_db(events_db_handle)
@


1.1
log
@Initial revision
@
text
@d36 1
d47 1
@
