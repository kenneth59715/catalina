head	1.4;
access;
symbols;
locks
	mmargo:1.4; strict;
comment	@# @;


1.4
date	2006.10.12.22.58.11;	author mmargo;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.11.20.16.01;	author kenneth;	state Exp;
branches;
next	1.2;

1.2
date	2001.11.06.23.08.23;	author kenneth;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.31.21.55.39;	author kenneth;	state Exp;
branches;
next	;


desc
@Python script for stopping all scheduling loops
@


1.4
log
@allow more time to pass before giving up
mmargo
@
text
@#!___PYTHON_PATH_PLACEHOLDER___

import Catalina
import time

CONFIGURATION_DB = Catalina.CONFIGURATION_DB

configuration_db_handle = Catalina.open_db(CONFIGURATION_DB,'write')
configuration_dict = configuration_db_handle[0]
configuration_dict['state'] = 'stopped'
Catalina.close_db(configuration_db_handle)

active_pids = 1
times_checked = 0
while active_pids != 0 and times_checked < 60 :
    print "waiting for scheduling processes to end",
    times_checked = times_checked + 1
    active_pids = 0
    configuration_db_handle = Catalina.open_ro_db(CONFIGURATION_DB,'read')
    configuration_dict = configuration_db_handle[0]
    if configuration_dict.has_key('server_hosts_pidslist_dict') :
        hosts_pids_dict = configuration_dict['server_hosts_pidslist_dict']
        for key in hosts_pids_dict.keys() :
            if len(hosts_pids_dict[key]) > 0 :
                print hosts_pids_dict
                active_pids = 1
                time.sleep(7)
                break
    Catalina.close_ro_db(configuration_db_handle)
if active_pids > 0 :
    print "Some scheduling loops may still be active."
    print "Check: %s" % hosts_pids_dict
@


1.3
log
@use ___PYTHON_PATH_PLACEHOLDER___
@
text
@d27 1
a27 1
                time.sleep(2)
@


1.2
log
@print out hosts and pids still running
@
text
@d1 1
a1 1
#!/usr/local/apps/python/bin/python
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
    print "waiting for scheduling processes to end"
d25 1
@
