head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2003.10.28.23.16.45;	author kenneth;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.25.17.45.03;	author kenneth;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.13.17.53.07;	author kenneth;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.08.23.46.21;	author kenneth;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.12.22.27.00;	author kenneth;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.12.22.26.01;	author kenneth;	state Exp;
branches;
next	;


desc
@check for running schedule loop
@


1.6
log
@check twice for running catalina
@
text
@#!___PYTHON_PATH_PLACEHOLDER___
import sys
import os
import string
DEVNULL = open('/dev/null', 'w')
old_stdout = sys.stdout
sys.stdout = DEVNULL
import Catalina
CONFIGURATION_DB = Catalina.CONFIGURATION_DB
configuration_db_handle = Catalina.open_ro_db(CONFIGURATION_DB,'read')
sys.stdout = old_stdout
configuration_dict = configuration_db_handle[0]
if configuration_dict['state'] == 'running' :
    cmd_string = "___PS_PLACEHOLDER___ ___PSOPTIONS_PLACEHOLDER___ | ___GREP_PLACEHOLDER___ 'catalina_schedule_jobs' | ___GREP_PLACEHOLDER___ -v grep | ___WC_PLACEHOLDER___ -l | ___AWK_PLACEHOLDER___ '{print $1}'"
    return_string = os.popen(cmd_string).read()
    if string.atoi(return_string) < 1 :
        # check again
        cmd_string = "___PS_PLACEHOLDER___ ___PSOPTIONS_PLACEHOLDER___ | ___GREP_PLACEHOLDER___ 'catalina_schedule_jobs' | ___GREP_PLACEHOLDER___ -v grep | ___WC_PLACEHOLDER___ -l | ___AWK_PLACEHOLDER___ '{print $1}'"
        return_string = os.popen(cmd_string).read()
        if string.atoi(return_string) < 1 :
            os.system('___DATE_PLACEHOLDER___')
            print "not running!"
            os.chdir('___HOMEDIR_PLACEHOLDER___')
            cmd_string = "___NOHUP_PLACEHOLDER___ ./catalina_schedule_jobs --iterate >/dev/null 2>&1 &"
            os.system(cmd_string)
sys.stdout = DEVNULL
Catalina.close_ro_db(configuration_db_handle)
@


1.5
log
@use catalina_schedule_jobs instead of schedule_jobs
@
text
@d17 9
a25 5
        os.system('___DATE_PLACEHOLDER___')
        print "not running!"
        os.chdir('___HOMEDIR_PLACEHOLDER___')
        cmd_string = "___NOHUP_PLACEHOLDER___ ./catalina_schedule_jobs --iterate >/dev/null 2>&1 &"
        os.system(cmd_string)
@


1.4
log
@added PSOPTIONS
@
text
@d14 1
a14 1
    cmd_string = "___PS_PLACEHOLDER___ ___PSOPTIONS_PLACEHOLDER___ | ___GREP_PLACEHOLDER___ 'schedule_jobs' | ___GREP_PLACEHOLDER___ -v grep | ___WC_PLACEHOLDER___ -l | ___AWK_PLACEHOLDER___ '{print $1}'"
d20 1
a20 1
        cmd_string = "___NOHUP_PLACEHOLDER___ ./schedule_jobs --iterate >/dev/null 2>&1 &"
@


1.3
log
@redirect output to /dev/null
@
text
@d14 1
a14 1
    cmd_string = "___PS_PLACEHOLDER___ -ef | ___GREP_PLACEHOLDER___ 'schedule_jobs' | ___GREP_PLACEHOLDER___ -v grep | ___WC_PLACEHOLDER___ -l | ___AWK_PLACEHOLDER___ '{print $1}'"
@


1.2
log
@modified to use schedule_jobs --iterate
@
text
@d20 1
a20 1
        cmd_string = "___NOHUP_PLACEHOLDER___ ./schedule_jobs --iterate &"
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
    cmd_string = "___PS_PLACEHOLDER___ -ef | ___GREP_PLACEHOLDER___ 'schedule_jobs_iterate' | ___GREP_PLACEHOLDER___ -v grep | ___WC_PLACEHOLDER___ -l | ___AWK_PLACEHOLDER___ '{print $1}'"
d20 1
a20 1
        cmd_string = "___NOHUP_PLACEHOLDER___ ./schedule_jobs_iterate &"
@
