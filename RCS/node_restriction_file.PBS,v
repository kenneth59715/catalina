head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2001.10.23.17.08.16;	author kenneth;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.12.21.40.51;	author kenneth;	state Exp;
branches;
next	;


desc
@default node restriction for PBS
@


1.2
log
@changed regex to re
@
text
@# Restrict nodes to those with ConfiguredClasses normal  and Max_Starters > 0
# If node does not have normal class or has Max_Starters == 0, reject
import re
import string

resource = input_tuple[0]

pattName = re.compile('.*normal')

#print "in node_restriction_file, %s has state %s" % (resource['name'], resource['State'])


if resource['State'] == 'Down' :
    result = 'Down'
elif resource['State'] == 'Drain' :
    result = 'Drain'
elif resource['State'] == 'Drained' :
    result = 'Drained'
elif resource['State'] == 'None' :
    result = 'None'
elif resource['State'] == None :
    result = None
elif resource['State'] == 'Unknown' :
    result = 'Unknown'
else :
    result = 0

@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
import regex
d8 1
a8 1
pattName = regex.compile('.*normal')
@
