head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2004.10.11.21.09.24;	author kenneth;	state Exp;
branches;
next	1.6;

1.6
date	2004.08.23.22.37.29;	author kenneth;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.23.22.14.50;	author kenneth;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.01.22.21.46;	author kenneth;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.17.16.21.53;	author kenneth;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.17.05.50.35;	author kenneth;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.12.22.35.42;	author kenneth;	state Exp;
branches;
next	;


desc
@sgid cancel of reservation by user
@


1.7
log
@close events db, change open and close orders
@
text
@#!___PYTHON_PATH_PLACEHOLDER___
# script for a user to create a reservation for himself or herself

import sys
import Catalina
import time
import string
import re
import os
import pwd
import signal
import copy

signal.signal(signal.SIGTSTP,signal.SIG_IGN)
events_db_handle = Catalina.open_db(Catalina.EVENTS_DB,'write');
reservations_db_handle = Catalina.open_db(Catalina.RESERVATIONS_DB,'write');

res_id_string = sys.argv[1]

res_id_reo = re.compile(r"\d+")

if res_id_reo.match(res_id_string) == None :
    print "Bad res_id format"
    sys.exit(1)

res_id_int = string.atoi(res_id_string)

username_string = pwd.getpwuid(os.getuid())[0]

# Check for username in res_id
old_res = Catalina.get_object(res_id_string, reservations_db_handle)
if not old_res['creator_string'] == username_string :
    print "user reservation (%s) has other creator (%s)!" % \
     (old_res['name'], old_res['creator_string'])
    print "Reservation has not been canceled!"
    Catalina.close_db(reservations_db_handle)
    Catalina.close_db(events_db_handle)
    sys.exit(1)

# If reached here, delete reservation

try :
    event = {
      'name' : 'user_cancel_res',
      'res' : copy.deepcopy(reservations_db_handle[0][res_id_string])
      }
    Catalina.log_event(event, events_db_handle)
except :
    print "Event log failure for (%s)!" % res_id_string
Catalina.delete_object(res_id_string, reservations_db_handle)

Catalina.close_db(reservations_db_handle)
Catalina.close_db(events_db_handle)
@


1.6
log
@move delete after log event
@
text
@d15 1
a16 1
events_db_handle = Catalina.open_db(Catalina.EVENTS_DB,'write');
d37 1
d52 1
a53 1
Catalina.close_db(reservations_db_handle)
@


1.5
log
@log event
@
text
@a40 1
Catalina.delete_object(res_id_string, reservations_db_handle)
d49 1
@


1.4
log
@ignore TSTP
@
text
@d12 1
d16 1
d42 8
d51 1
@


1.3
log
@added warning that reservation has not been canceled
@
text
@d11 1
d13 1
@


1.2
log
@changed lots
@
text
@d29 1
a29 1
    print "user reservation (%s) has other creator (%s)" % \
d31 1
@


1.1
log
@Initial revision
@
text
@d29 3
a31 1
    print "user reservations has other creator (%s)" % old_res['creator_string']
@
