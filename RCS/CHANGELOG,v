head	1.2;
access;
symbols;
locks
	mmargo:1.2; strict;
comment	@# @;


1.2
date	2006.11.21.22.56.43;	author mmargo;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.16.19.37.38;	author mmargo;	state Exp;
branches;
next	;


desc
@CHANGELOG file for Catalina
@


1.2
log
@newest version
mmargo
@
text
@Catalina changelogs
started on 10/16/2006
--------------------

Version 20061121



1. Fix bug 549 (Datastar: consumable CPU returns 0 ). A user can make a typo in his job script and include wrong consumable resources. By default catalina requests 0 cpus / task. This only applies to shared nodes. The fix was to detect this problem in Catalina_LL.py's get_job_steps_dict() and notify the user ONCE about it.
2. Fix bug 557 (qj_LL emails are not sent). Catalina supposed to catch an exception where qj_LL failed during an iteration and send email to administrators to notify them of this failure. This didn't happen. The fix was to correct the logic error during exception handling. Also, better mail message and subject is included.
3. Updated db_migration.txt with better instruction on database migration.
4. Updated conf.sh. It now includes old show_bf (now called show_free) into the distribution.
5. Update stop.py to allow more time before giving up.
6. New show_q. Allows parameter --fullname that will return the fullname of the user along with user's organization.
7. Updated conf.sh to include this CHANGELOG in distribution.
8. [bug 558] Make Catalina more robust by handling the case when a null pointer is given by LoadL API in case of stuck epilog in some of the slave nodes.
9. [bug 560] Catalina now support task geometry jobs. It was working before the last version. My abbreviation code broke it. Now it has been fixed.
10. [bug 587] Speed up update_job_resource_lists(). This is a big fix. It eliminates repeated work that Catalina has been doing. Each iteration, this subroutine takes 3.5 minutes CPU time with very little benefit in stable system such as Datastar. I have eliminated this repeated work and we can shave up to 3.5 minutes CPU time per iteration making Catalina faster. I have tested this capability on ds355.

@


1.1
log
@Initial revision
@
text
@d5 3
a7 1
Version 20061016
d15 5
a19 1
7. Updated conf.sh to include this CHANGELOG in distribution.@
